/*
*
* SaloIntellect project
* Copyright (C) 2015-2020 Motylenok Mikhail, Makarevich Nikita
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
*/

//get all messages
var all = API.messages.get({"count": 23});

var i = 22; 
var found = 0;
var msg0;
var k = 0;

while((i > -1) && (found == 0) && (k < 22))
{
   var tmp = all.items[i];
   
  //unreaded messages only
   if(tmp.read_state == 0)
   {
       //if from im 
       if(!tmp.chat_id)
       {
           found = 1;
           msg0 = tmp;
       }
       else     //else if from chat
       {    
            //greeting check
            var greet = tmp.body.substr(0, 8);
            var greet2 = tmp.body.substr(0, 4);
            
            if(greet != "Сало" && greet != "сало" 
            && greet != "САЛО"
            && greet2 != "Salo" && greet2 != "SALO" 
            && greet2 != "salo")
            {
                //return("nomsg");
                API.messages.markAsRead({"message_ids": tmp.id});
                k = k + 1;
            }
            else
            {
                found = 1;
                msg0 = tmp;
            }
       }
   }
   
i = i - 1;
}

//return if no new msg
if(found == 0)
    {
        return("nomsg");
    }
    
//var msg0 = msg.items[0].message;
var atch = msg0.attachments[0].type;

if(atch == null)
{
    if(msg0.fwd_messages[0] != null)
    {
        atch = "fwd_messages";        
    }
    else
    {
        atch = "null";
    }
    
}

if(!msg0.chat_id)
    {
        //mark as readed
        API.messages.markAsRead({"message_ids": msg0.id});
        //Set up writing status
        API.messages.setActivity({"user_id":msg0.user_id, "type":"typing"});
    }
    else
    {
        var peer = 2000000000 + msg0.chat_id;
        //mark as readed
        API.messages.markAsRead({"message_ids": msg0.id});
        //Set up writing status
        API.messages.setActivity({"peer_id":peer, "type":"typing"});
    }



//get user data
var user = API.users.get({"user_ids":msg0.user_id})[0];

//return data
return({"msgtxt":msg0.body, 
    "user_id":msg0.user_id, 
    "name":user.first_name,
    "last":user.last_name,
    "chat_id": msg0.chat_id,
    "attch": atch,
    "status": "ALL_OK"
});